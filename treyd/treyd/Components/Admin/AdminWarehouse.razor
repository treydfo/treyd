@using DataLibrary
@using Microsoft.Extensions.Configuration
@using System.Linq

@implements IDisposable

@inject IDataAccess _data
@inject IConfiguration _config
@inject StateContainer StateContainer

<AuthorizeView>
    <Authorized>
        <div class="modal-backdrop" style="@modalBackdropDisplay" />

        @if (context.User.IsInRole("Admin"))
        {
            <div class="row">
                <AddCategory />
                <CategoryList />
            </div>
        }

        <br />
        <hr />
        <br />

        <buttton class="w-100 btn btn-lg btn-info" data-bs-toggle="modal" data-bs-target="#exampleModal">
            Skráset vøru
        </buttton>

        <br />
        <hr />
        <br />

        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title" id="exampleModalLabel">Skráset vøru</h3>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <AddProduct Seller="@Seller" />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Lat aftur</button>
                    </div>
                </div>
            </div>
        </div>

        <br />
        <hr />
        <br />

        <div class="row">
            <div class="col-6">
                <div class="card mb-3">
                    <div class="card-header bg-success text-white">
                        <i class="fas fa-tag"></i> Sett til sølu
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-12 my-auto">
                                <div class="prod">
                                    <div class="row" style="text-align: center; justify-content: start">
                                        @if (Products != null)
                                        {
                                            foreach (var product in Products)
                                            {
                                                if (product.Published == true)
                                                {
                                                    <Product ProductModel="product" GetBackdrop="@ToggleBackdrop" ViewMode="ListView"></Product>
                                                }
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer small bg-success text-white">Updated yesterday at 11:59 PM</div>
                </div>
            </div>
            <div class="col-6">
                <div class="card mb-3">
                    <div class="card-header bg-secondary text-white">
                        <i class="fa fa-archive"></i> Ikki sett til sølu
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-12 my-auto">
                                <div class="prod">
                                    <div class="row" style="text-align: center; justify-content: start">
                                        @if (Products != null)
                                        {
                                            foreach (var product in Products)
                                            {
                                                if (product.Published == false)
                                                {
                                                    <Product ProductModel="product" GetBackdrop="@ToggleBackdrop" ViewMode="ListView"></Product>
                                                }
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer small bg-secondary text-white">Updated yesterday at 11:59 PM</div>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <LoginRedirect />
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<ProductModel> Products;

    [Parameter] public string Seller { get; set; }

    private string modalBackdropDisplay = "display: none;";

    public void ToggleBackdrop(bool backdrop)
    {
        if (backdrop == true)
        {
            this.modalBackdropDisplay = "display: block;";
        }
        else if (backdrop == false)
        {
            this.modalBackdropDisplay = "display: none;";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    protected async Task<bool> LoadProducts()
    {
        try
        {
            string sql = "select * from products where Seller = @Seller";
            Products = await _data.LoadData<ProductModel, dynamic>(sql, new { Seller = this.Seller }, _config.GetConnectionString("default"));

            return await Task.FromResult(true);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);

            return await Task.FromResult(false);
        }
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }
}

<style>
    .modal-backdrop {
        opacity: 0.5;
    }
</style>