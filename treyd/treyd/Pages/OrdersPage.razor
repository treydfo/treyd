@page "/brukari/bileggingar"

@using DataLibrary
@using Microsoft.Extensions.Configuration
@using Microsoft.AspNetCore.WebUtilities;

@inject IDataAccess _data
@inject IConfiguration _config
@inject StateContainer StateContainer
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        <div class="container">
            <h1 class="h3 mt-4 mb-3 fw-normal text-info text-center">Tínar bíleggingar</h1>
            <hr />
            <div class="accordion" id="accordionExample">
                @if (Orders != null && OrderItems != null)
                {
                    @foreach (var order in Orders)
                    {
                        this.count++;
                        <div class="accordion-item text-info" style="background: white;">
                            <h2 class="accordion-header" id="heading@(this.count)">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@(this.count)" aria-expanded="true" aria-controls="collapse@(this.count)">
                                    <table>
                                        <tr>
                                            <td>Bíleggingarnummar: </td>
                                            <td>@order.OrderNumber</td>
                                        </tr>
                                        <tr>
                                            <td>Bílagt: </td>
                                            <td>@order.DateOrdered.Date</td>
                                        </tr>
                                        <tr>
                                            <td>Í alt: </td>
                                            <td>@order.Total.ToString("N2")</td>
                                        </tr>
                                    </table>
                                </button>
                            </h2>
                            <div id="collapse@(this.count)" class="accordion-collapse collapse" aria-labelledby="heading@(this.count)" data-bs-parent="#accordionExample">
                                <div class="accordion-body text-info">
                                    @foreach (var item in OrderItems)
                                    {
                                        if (item.OrderID.Equals(order.OrderID))
                                        {

                                            <table>
                                                <tr>
                                                    <td>Vøruheiti: </td>
                                                    <td>@item.Name</td>
                                                </tr>
                                                <tr>
                                                    <td>Vørulýsing: </td>
                                                    <td>@item.Description</td>
                                                </tr>
                                                <tr>
                                                    <td>Nøgd: </td>
                                                    <td>@item.Amount</td>
                                                </tr>
                                                <tr>
                                                    <td>Prísur: </td>
                                                    <td>@item.Subtotal.ToString("N2")</td>
                                                </tr>
                                            </table>
                                            <br />
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <IndexRedirect />
    </NotAuthorized>
</AuthorizeView>

@code {
    private int count { get; set; } = 0;
    private string email = "";

    private UserModel User { get; set; }

    private List<OrderItemsModel> OrderItems;
    private List<OrderModel> Orders;

    protected override async Task OnInitializedAsync()
    {
        if (await ((TreydAuthenticationStateProvider)AuthenticationStateProvider).GetAuthenticationStateAsync() is not null)
        {
            var auth = await SessionStorage.GetAsync<string>("user");

            if (auth.Value != null)
            {
                var data = auth.Value.Split(" ");
                this.email = data[data.Length - 1];

                await LoadUser();
                await LoadOrders();
                await LoadOrderItems();
            }
        }
    }

    protected async Task<bool> LoadUser()
    {
        try
        {
            string sql = "select * from users where Email = @Email";
            User = await _data.QuerySingle<UserModel, dynamic>(sql, new { Email = this.email }, _config.GetConnectionString("default"));

            return await Task.FromResult(true);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);

            return await Task.FromResult(false);
        }
    }

    protected async Task<bool> LoadOrders()
    {
        try
        {
            string sql = "select * from orders where orders.UserID = @UserID";
            Orders = await _data.LoadData<OrderModel, dynamic>(sql, new { UserID = User.UserID }, _config.GetConnectionString("default"));

            return await Task.FromResult(true);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);

            return await Task.FromResult(false);
        }
    }

    protected async Task<bool> LoadOrderItems()
    {
        try
        {
            string sql = "select * from order_items " +
                    "inner join products " +
                    "on order_items.ProductID = products.ProductID " +
                    "inner join orders " +
                    "on order_items.OrderID = orders.OrderID " +
                    "where orders.UserID = @UserID";
            OrderItems = await _data.LoadData<OrderItemsModel, dynamic>(sql, new { UserID = User.UserID }, _config.GetConnectionString("default"));

            return await Task.FromResult(true);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);

            return await Task.FromResult(false);
        }
    }
}
