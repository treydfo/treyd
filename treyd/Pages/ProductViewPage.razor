@page "/soelumidstoedin/voera/{Id:int}"

@using DataLibrary
@using Microsoft.Extensions.Configuration
@using System.Linq

@inject IDataAccess _data
@inject IConfiguration _config
@inject AuthenticationStateProvider AuthenticationStateProvider

<!--Main layout-->
<main class="mt-5 pt-4">
    <div class="container mt-5 mb-4">

        <Product ProductModel="ProductModel" ViewMode="ProductView" />

        <hr>

        <!--Grid row-->
        <div class="row d-flex justify-content-center wow fadeIn">

            <!--Grid column-->
            <div class="col-md-6 text-center">

                <h4 class="my-4 h4 text-info">Onnur keypa eisini</h4>

                <p>
                    
                </p>

            </div>
            <!--Grid column-->

        </div>
        <!--Grid row-->
        <!--Grid row-->
        <div class="row wow fadeIn">

            <!--Grid column-->
            <div class="col-lg-4 col-md-12 mb-4">

                <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/11.jpg" class="img-fluid" alt="">

            </div>
            <!--Grid column-->
            <!--Grid column-->
            <div class="col-lg-4 col-md-6 mb-4">

                <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/12.jpg" class="img-fluid" alt="">

            </div>
            <!--Grid column-->
            <!--Grid column-->
            <div class="col-lg-4 col-md-6 mb-4">

                <img src="https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/13.jpg" class="img-fluid" alt="">

            </div>
            <!--Grid column-->

        </div>
        <!--Grid row-->

    </div>
</main>

@code {
    [Parameter]
    public int Id { get; set; }

    ProductModel ProductModel = new ProductModel();

    protected override async Task OnInitializedAsync()
    {
        await ((TreydAuthenticationStateProvider)AuthenticationStateProvider).GetAuthenticationStateAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadProduct();
    }

    protected async Task<bool> LoadProduct()
    {
        try
        {
            string sql = "select * from products where ProductID = @ProductID";
            ProductModel = await _data.QuerySingle<ProductModel, dynamic>(sql, new { ProductID = this.Id }, _config.GetConnectionString("default"));

            return await Task.FromResult(true);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);

            return await Task.FromResult(false);
        }
    }
}
